* Backlog for the RestEasy project.

** TODO Add the client-side app for admins.

** TODO Add unit tests.

** TODO Make it possible for users to edit the cart.

** TODO Allow users to search for vendors by address/area.

** TODO Support sorting of dish/vendor listing.

** TODO Make users' carts persist across (login) sessions.

** TODO Have a separate API function to explicitly commit the changes.

   At present, we do a commit for every update/change we perform on the DB.
   That's not the right approach always.  For example, when placing orders, we
   first create an entry in the `orders` table, then create one or more entries
   in the `orderdishes` table.  Currently a commit is done (automatically) for
   each of those actions.  Instead, it would be better to start creating all
   those entries, and finally, at the end, do a commit.  That would be more in
   line with the concept of transactions: either the entire set of changes is
   made, or none of them are.

** TODO Read config data for client-side apps from config (.ini) files.

   We currently use global variables in the source files as a workaround.

** TODO Do better error-checking for api calls.

   In the user-facing app resteasy.py, we have several wrapper functions around
   API calls that deserialize and return the JSON data returned by the APIs.
   We should check for possible errors in that flow, in case an API call fails.

** TODO Reduce boilerplate in the API wrapper functions.

   The wrapper functions around the API calls (as mentioned in the previous
   TODO) are basically doing the same thing: call the API, and return the
   deserialized data.  We should be able to reduce all of them to a single
   wrapper function.
